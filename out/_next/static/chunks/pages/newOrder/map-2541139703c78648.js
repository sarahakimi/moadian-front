(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8785],{29167:function(e){function t(e){if(e=Object.assign({},e),!(this instanceof t))throw new Error("MapboxLanguage needs to be called with the new keyword");this.setLanguage=this.setLanguage.bind(this),this._initialStyleUpdate=this._initialStyleUpdate.bind(this),this._defaultLanguage=e.defaultLanguage,this._isLanguageField=e.languageField||/^name_/,this._getLanguageField=e.getLanguageField||function(e){return"mul"===e?"name":`name_${e}`},this._languageSource=e.languageSource||null,this._languageTransform=e.languageTransform,this._excludedLayerIds=e.excludedLayerIds||[],this.supportedLanguages=e.supportedLanguages||["ar","de","en","es","fr","it","ja","ko","mul","pt","ru","vi","zh-Hans","zh-Hant"]}const n=/^\{name/;function a(e,t){const a=Array.isArray(t)&&"get"===t[0];return a&&n.test(t[1])&&console.warn("This plugin no longer supports the use of token syntax (e.g. {name}). Please use a get expression. See https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/ for more details."),a&&e.test(t[1])}function s(e,t,n){if(Array.isArray(t))for(let i=1;i<t.length;i++)Array.isArray(t[i])&&(a(e,t[i])&&(t[i][1]=n),s(e,t[i],n))}function i(e,t,n){if(a(e,t)&&(t[1]=n),s(e,t,n),"get"===t[0]&&"name"===t[1]){const e=t.slice();t=["coalesce",["get",n],e]}return t}t.prototype.setLanguage=function(e,t){if(this.supportedLanguages.indexOf(t)<0)throw new Error(`Language ${t} is not supported`);const n=this._languageSource||function(e){const t=Object.keys(e.sources).filter((t=>{const n=e.sources[t].url;return n&&n.indexOf("mapbox.mapbox-streets-v8")>-1||/mapbox-streets-v[1-9][1-9]/.test(n)}));if(!t.length)throw new Error('If using MapboxLanguage with a Mapbox style, the style must be based on vector tile version 8, e.g. "streets-v11"');return t[0]}(e);if(!n)return e;const a=this._getLanguageField(t),s=this._isLanguageField,r=this._excludedLayerIds,o=e.layers.map((e=>e.source===n?function(e,t,n,a){return t.layout&&t.layout["text-field"]&&-1===a.indexOf(t.id)?Object.assign({},t,{layout:Object.assign({},t.layout,{"text-field":i(e,t.layout["text-field"],n)})}):t}(s,e,a,r):e)),u=Object.assign({},e,{layers:o});return this._languageTransform?this._languageTransform(u,t):u},t.prototype._initialStyleUpdate=function(){const e=this._map.getStyle(),t=this._defaultLanguage||function(e){const t=navigator.languages?navigator.languages[0]:navigator.language||navigator.userLanguage,n=t&&t.split("-");let a=t;n.length>1&&(a=n[0]);if(e.indexOf(a)>-1)return a;return null}(this.supportedLanguages);this._map.setStyle(this.setLanguage(e,t))},t.prototype.onAdd=function(e){return this._map=e,this._map.on("style.load",this._initialStyleUpdate),this._container=document.createElement("div"),this._container},t.prototype.onRemove=function(){this._map.off("style.load",this._initialStyleUpdate),this._map=void 0},"undefined"!==typeof e.exports?e.exports=t:window.MapboxLanguage=t},55369:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/newOrder/map",function(){return n(19318)}])},19318:function(e,t,n){"use strict";n.r(t);var a=n(85893),s=n(67294),i=n(6158),r=n.n(i),o=(n(77329),n(29167)),u=n.n(o);t.default=function(e){var t=e.latLang,n=e.setLatLang,i=(0,s.useState)()[1],o=(0,s.useRef)(null);return(0,s.useEffect)((function(){var e=o.current;if(null!==e){"unavailable"===r().getRTLTextPluginStatus()&&r().setRTLTextPlugin("https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js",null,!0);var a=new(r().Map)({container:e,accessToken:"pk.eyJ1Ijoic2FyYWhha2ltaSIsImEiOiJjbGR4NWM5ajUwZTNqM29rYWl6cDdtMGY4In0.BYeaDTD-EcClRju6Giw0mw",style:"mapbox://styles/mapbox/streets-v11",center:t,zoom:10});a.addControl(new(u())({defaultLanguage:"mul"})),i(a);var s=new(r().Marker)({draggable:!0}).setLngLat(t).addTo(a);s.on("dragend",(function(){var e=s.getLngLat();n([e.lng,e.lat])}))}}),[t]),(0,a.jsx)("div",{ref:o,style:{width:"100%",height:"100%"}})}},77329:function(){}},function(e){e.O(0,[2634,5307,9774,2888,179],(function(){return t=55369,e(e.s=t);var t}));var t=e.O();_N_E=t}]);